name: Auto Notifications

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, closed, merged ]
  release:
    types: [ published ]
  schedule:
    - cron: '0 9 * * 1' # 매주 월요일 오전 9시

jobs:
  notify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Get repository stats
      id: stats
      run: |
        echo "commits=$(git rev-list --count HEAD)" >> $GITHUB_OUTPUT
        echo "contributors=$(git log --pretty=format:'%an' | sort | uniq | wc -l)" >> $GITHUB_OUTPUT
        echo "last_commit=$(git log -1 --pretty=format:'%h - %s (%an, %ar)')" >> $GITHUB_OUTPUT
        
    - name: Create notification message
      run: |
        case "${{ github.event_name }}" in
          "push")
            MESSAGE="🚀 **New Push to ${{ github.ref_name }}**
            
            **Repository:** ${{ github.repository }}
            **Commit:** ${{ github.sha }}
            **Author:** ${{ github.actor }}
            **Message:** $(git log -1 --pretty=format:'%s')
            
            📊 **Repository Stats:**
            - Total Commits: ${{ steps.stats.outputs.commits }}
            - Contributors: ${{ steps.stats.outputs.contributors }}
            - Last Commit: ${{ steps.stats.outputs.last_commit }}
            
            🔗 [View Changes](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
            ;;
          "pull_request")
            if [ "${{ github.event.action }}" = "opened" ]; then
              MESSAGE="🆕 **New Pull Request Opened**
              
              **Title:** ${{ github.event.pull_request.title }}
              **Author:** ${{ github.actor }}
              **From:** ${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }}
              
              🔗 [View PR](https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }})"
            elif [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              MESSAGE="✅ **Pull Request Merged**
              
              **Title:** ${{ github.event.pull_request.title }}
              **Author:** ${{ github.actor }}
              **Merged by:** ${{ github.event.pull_request.merged_by.login }}
              
              🔗 [View PR](https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }})"
            fi
            ;;
          "release")
            MESSAGE="🎉 **New Release Published**
            
            **Version:** ${{ github.event.release.tag_name }}
            **Title:** ${{ github.event.release.name }}
            **Author:** ${{ github.actor }}
            
            🔗 [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.event.release.tag_name }})"
            ;;
          "schedule")
            MESSAGE="📅 **Weekly Repository Update**
            
            **Repository:** ${{ github.repository }}
            **Week of:** $(date +'%B %d, %Y')
            
            📊 **Current Stats:**
            - Total Commits: ${{ steps.stats.outputs.commits }}
            - Contributors: ${{ steps.stats.outputs.contributors }}
            - Last Activity: ${{ steps.stats.outputs.last_commit }}
            
            🔗 [View Repository](https://github.com/${{ github.repository }})"
            ;;
        esac
        
        echo "$MESSAGE" > notification.md
        
    - name: Create GitHub Issue with notification
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const message = fs.readFileSync('notification.md', 'utf8');
          
          const title = `🔔 ${context.eventName.charAt(0).toUpperCase() + context.eventName.slice(1)} Notification - ${new Date().toLocaleDateString()}`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: message,
            labels: ['notification', 'automated']
          });
          
    - name: Upload notification
      uses: actions/upload-artifact@v4
      with:
        name: notification
        path: notification.md
